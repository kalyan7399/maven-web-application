def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node {
echo "job name is  ${env.JOB_NAME}"
echo "node name is  ${env.NODE_NAME}"
def mavenHome = tool name: 'maven3.8.4'
//get the source code
try
{
stage ('checkoutCode'){
git branch: 'development', credentialsId: '71aa08a7-79f6-4ac7-b6a6-7010341536ee', url: 'https://github.com/kalyan7399/maven-web-application.git'
}
//do the maven build
stage('build'){
sh "${mavenHome}/bin/mvn clean package"
}
//execute the sonarqubereport
stage('sonarqubereport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
//upload artifactory details
stage('upload artifactory'){
sh "${mavenHome}/bin/mvn deploy"
}
//deploy to tomcat
stage('deplo to tomcat'){
sshagent(['668bf4b3-23a3-43b4-aae2-a601b0d950e8']) {
sh "scp -o StrictHostKeyChecking =no target/maven-web-application.war ec2-user@3.110.214.156:/opt/apache-tomacat-9.0.65/webapps/"
}
}
}
catch(e){
currentBuild.result = "FAILED"
}
finally{
notifyBuild(currentBuild.result)
}
}
